// Define logging configuration
logging {
  level  = "info"
}

//for fleet management
remotecfg {
    url = sys.env("GRAFANACLOUD_FLEET_MANAGEMENT_URL")
    basic_auth {
        username      = sys.env("GRAFANACLOUD_FLEET_MANAGEMENT_USERNAME")
        password      = sys.env("GRAFANACLOUD_FLEET_MANAGEMENT_PASSWORD")
    }

    id             = constants.hostname
    attributes     = {"namespace" = "swarm-test"}
    poll_frequency = "5m"
}


//monitor underlying host metrics
prometheus.exporter.unix "host" { }
// Configure a prometheus.scrape component to collect unix metrics.
prometheus.scrape "host" {
  targets    = prometheus.exporter.unix.host.targets
  forward_to = [prometheus.remote_write.grafanacloud.receiver]
}

//setup loki source api to receive app logs from logback
loki.source.api "loki_push_api" {
    http {
        listen_address = "0.0.0.0"
        listen_port = "3100"
    }
    forward_to = [loki.write.grafanacloud.receiver]
}

//send logs to grafana cloud
loki.write "grafanacloud" {
    endpoint {
        url = sys.env("GRAFANACLOUD_LOGS_URL")
        basic_auth {
            username = sys.env("GRAFANACLOUD_LOGS_USERNAME")
            password = sys.env("GRAFANACLOUD_LOGS_PASSWORD")
        }
    }
}

//send metrics to grafana cloud
prometheus.remote_write "grafanacloud" {
  endpoint {
    url = sys.env("GRAFANACLOUD_METRICS_URL")

    basic_auth {
      username = sys.env("GRAFANACLOUD_METRICS_USERNAME")
      password = sys.env("GRAFANACLOUD_METRICS_PASSWORD")
    }
  }
}